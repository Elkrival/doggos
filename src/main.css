@import url("https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900");
@font-face {
  font-family: "linea-basic-10";
  src: url("fonts/linea-basic-10.eot");
  src: url("fonts/linea-basic-10.eot?#iefix") format("embedded-opentype"), url("fonts/linea-basic-10.woff") format("woff"), url("fonts/linea-basic-10.ttf") format("truetype"), url("fonts/linea-basic-10.svg#linea-basic-10") format("svg");
  font-weight: normal;
  font-style: normal; }

[data-icon]:before {
  font-family: "linea-basic-10" !important;
  content: attr(data-icon);
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

[class^="icon-"]:before,
[class*=" icon-"]:before {
  font-family: "linea-basic-10" !important;
  font-style: normal !important;
  font-weight: normal !important;
  font-variant: normal !important;
  text-transform: none !important;
  speak: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-basic-accelerator:before {
  content: "a"; }

.icon-basic-alarm:before {
  content: "b"; }

.icon-basic-anchor:before {
  content: "c"; }

.icon-basic-anticlockwise:before {
  content: "d"; }

.icon-basic-archive:before {
  content: "e"; }

.icon-basic-archive-full:before {
  content: "f"; }

.icon-basic-ban:before {
  content: "g"; }

.icon-basic-battery-charge:before {
  content: "h"; }

.icon-basic-battery-empty:before {
  content: "i"; }

.icon-basic-battery-full:before {
  content: "j"; }

.icon-basic-battery-half:before {
  content: "k"; }

.icon-basic-bolt:before {
  content: "l"; }

.icon-basic-book:before {
  content: "m"; }

.icon-basic-book-pen:before {
  content: "n"; }

.icon-basic-book-pencil:before {
  content: "o"; }

.icon-basic-bookmark:before {
  content: "p"; }

.icon-basic-calculator:before {
  content: "q"; }

.icon-basic-calendar:before {
  content: "r"; }

.icon-basic-cards-diamonds:before {
  content: "s"; }

.icon-basic-cards-hearts:before {
  content: "t"; }

.icon-basic-case:before {
  content: "u"; }

.icon-basic-chronometer:before {
  content: "v"; }

.icon-basic-clessidre:before {
  content: "w"; }

.icon-basic-clock:before {
  content: "x"; }

.icon-basic-clockwise:before {
  content: "y"; }

.icon-basic-cloud:before {
  content: "z"; }

.icon-basic-clubs:before {
  content: "A"; }

.icon-basic-compass:before {
  content: "B"; }

.icon-basic-cup:before {
  content: "C"; }

.icon-basic-diamonds:before {
  content: "D"; }

.icon-basic-display:before {
  content: "E"; }

.icon-basic-download:before {
  content: "F"; }

.icon-basic-exclamation:before {
  content: "G"; }

.icon-basic-eye:before {
  content: "H"; }

.icon-basic-eye-closed:before {
  content: "I"; }

.icon-basic-female:before {
  content: "J"; }

.icon-basic-flag1:before {
  content: "K"; }

.icon-basic-flag2:before {
  content: "L"; }

.icon-basic-floppydisk:before {
  content: "M"; }

.icon-basic-folder:before {
  content: "N"; }

.icon-basic-folder-multiple:before {
  content: "O"; }

.icon-basic-gear:before {
  content: "P"; }

.icon-basic-geolocalize-01:before {
  content: "Q"; }

.icon-basic-geolocalize-05:before {
  content: "R"; }

.icon-basic-globe:before {
  content: "S"; }

.icon-basic-gunsight:before {
  content: "T"; }

.icon-basic-hammer:before {
  content: "U"; }

.icon-basic-headset:before {
  content: "V"; }

.icon-basic-heart:before {
  content: "W"; }

.icon-basic-heart-broken:before {
  content: "X"; }

.icon-basic-helm:before {
  content: "Y"; }

.icon-basic-home:before {
  content: "Z"; }

.icon-basic-info:before {
  content: "0"; }

.icon-basic-ipod:before {
  content: "1"; }

.icon-basic-joypad:before {
  content: "2"; }

.icon-basic-key:before {
  content: "3"; }

.icon-basic-keyboard:before {
  content: "4"; }

.icon-basic-laptop:before {
  content: "5"; }

.icon-basic-life-buoy:before {
  content: "6"; }

.icon-basic-lightbulb:before {
  content: "7"; }

.icon-basic-link:before {
  content: "8"; }

.icon-basic-lock:before {
  content: "9"; }

.icon-basic-lock-open:before {
  content: "!"; }

.icon-basic-magic-mouse:before {
  content: "\""; }

.icon-basic-magnifier:before {
  content: "#"; }

.icon-basic-magnifier-minus:before {
  content: "$"; }

.icon-basic-magnifier-plus:before {
  content: "%"; }

.icon-basic-mail:before {
  content: "&"; }

.icon-basic-mail-multiple:before {
  content: "'"; }

.icon-basic-mail-open:before {
  content: "("; }

.icon-basic-mail-open-text:before {
  content: ")"; }

.icon-basic-male:before {
  content: "*"; }

.icon-basic-map:before {
  content: "+"; }

.icon-basic-message:before {
  content: ","; }

.icon-basic-message-multiple:before {
  content: "-"; }

.icon-basic-message-txt:before {
  content: "."; }

.icon-basic-mixer2:before {
  content: "/"; }

.icon-basic-mouse:before {
  content: ":"; }

.icon-basic-notebook:before {
  content: ";"; }

.icon-basic-notebook-pen:before {
  content: "<"; }

.icon-basic-notebook-pencil:before {
  content: "="; }

.icon-basic-paperplane:before {
  content: ">"; }

.icon-basic-pencil-ruler:before {
  content: "?"; }

.icon-basic-pencil-ruler-pen:before {
  content: "@"; }

.icon-basic-photo:before {
  content: "["; }

.icon-basic-picture:before {
  content: "]"; }

.icon-basic-picture-multiple:before {
  content: "^"; }

.icon-basic-pin1:before {
  content: "_"; }

.icon-basic-pin2:before {
  content: "`"; }

.icon-basic-postcard:before {
  content: "{"; }

.icon-basic-postcard-multiple:before {
  content: "|"; }

.icon-basic-printer:before {
  content: "}"; }

.icon-basic-question:before {
  content: "~"; }

.icon-basic-rss:before {
  content: "\\"; }

.icon-basic-server:before {
  content: "\e000"; }

.icon-basic-server2:before {
  content: "\e001"; }

.icon-basic-server-cloud:before {
  content: "\e002"; }

.icon-basic-server-download:before {
  content: "\e003"; }

.icon-basic-server-upload:before {
  content: "\e004"; }

.icon-basic-settings:before {
  content: "\e005"; }

.icon-basic-share:before {
  content: "\e006"; }

.icon-basic-sheet:before {
  content: "\e007"; }

.icon-basic-sheet-multiple:before {
  content: "\e008"; }

.icon-basic-sheet-pen:before {
  content: "\e009"; }

.icon-basic-sheet-pencil:before {
  content: "\e00a"; }

.icon-basic-sheet-txt:before {
  content: "\e00b"; }

.icon-basic-signs:before {
  content: "\e00c"; }

.icon-basic-smartphone:before {
  content: "\e00d"; }

.icon-basic-spades:before {
  content: "\e00e"; }

.icon-basic-spread:before {
  content: "\e00f"; }

.icon-basic-spread-bookmark:before {
  content: "\e010"; }

.icon-basic-spread-text:before {
  content: "\e011"; }

.icon-basic-spread-text-bookmark:before {
  content: "\e012"; }

.icon-basic-star:before {
  content: "\e013"; }

.icon-basic-tablet:before {
  content: "\e014"; }

.icon-basic-target:before {
  content: "\e015"; }

.icon-basic-todo:before {
  content: "\e016"; }

.icon-basic-todo-pen:before {
  content: "\e017"; }

.icon-basic-todo-pencil:before {
  content: "\e018"; }

.icon-basic-todo-txt:before {
  content: "\e019"; }

.icon-basic-todolist-pen:before {
  content: "\e01a"; }

.icon-basic-todolist-pencil:before {
  content: "\e01b"; }

.icon-basic-trashcan:before {
  content: "\e01c"; }

.icon-basic-trashcan-full:before {
  content: "\e01d"; }

.icon-basic-trashcan-refresh:before {
  content: "\e01e"; }

.icon-basic-trashcan-remove:before {
  content: "\e01f"; }

.icon-basic-upload:before {
  content: "\e020"; }

.icon-basic-usb:before {
  content: "\e021"; }

.icon-basic-video:before {
  content: "\e022"; }

.icon-basic-watch:before {
  content: "\e023"; }

.icon-basic-webpage:before {
  content: "\e024"; }

.icon-basic-webpage-img-txt:before {
  content: "\e025"; }

.icon-basic-webpage-multiple:before {
  content: "\e026"; }

.icon-basic-webpage-txt:before {
  content: "\e027"; }

.icon-basic-world:before {
  content: "\e028"; }

/*-------- Clear Fix --------
When an item is floated it loses it's height this is where we implement ClearFix for floats we will be using this as a mixin and using it where appropriate. Unlike an extend this is code that can be used by multiple elements, where as Extend is the foundation of the element prior to it's states that may change it.

To use clearfix we call the mixin and we alter the pseudo class of the float element

we use empty content, and display as table but the icing on the cake is the clear:both
*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem) rotate3d(1, 0.6, 3, 360deg); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100%); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInButtonBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit; }

html {
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation: moveInLeft 1s ease-out; }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #55c57a, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewX(15deg) skewY(2deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(last-child) {
    margin-bottom: 3rem; }

/*    These classes are only used for a specific task they are a great tool

When we think of utility functions we think of how we will be doing the spacing we don't want to hardcode the the pixels in there already we want to instead name them differently

*/
.u-center-text {
  text-align: center !important; }

.u-margin-bottom-big {
  margin-bottom: 8rem !important; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem !important; }

.u-margin-bottom-medium {
  margin-bottom: 4rem !important; }

.u-margin-top-big {
  margin-top: 8rem !important; }

.u-margin-top-huge {
  margin-top: 10rem !important; }

.btn, .btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem;
  border: none;
  cursor: pointer; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; }

.btn:active, .btn:focus {
  outline: none;
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff;
    color: #777; }

.btn--green {
  background-color: #55c57a;
  color: #fff; }
  .btn--green::after {
    background-color: #fff;
    color: #fff; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn--animated {
  animation: moveInButtonBottom .5s ease-out .75s;
  animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #FF7043;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #FF7043;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #FF7043;
  color: #fff;
  box-shadow: -1rem 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: -1rem 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s;
    outline-offset: 2rem; }
    .composition__photo--p1 {
      left: 20rem;
      top: -6rem; }
    .composition__photo--p2 {
      right: 50%;
      top: 2rem; }
    .composition__photo--p3 {
      left: 35%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 1.5rem solid #FF7043;
      transform: scale(1.05) translateY(0.5rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.8); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8));
    -webkit-background-clip: text;
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.03); }

.card {
  perspective: 150rem;
  -moz-perspectivee: 150rem;
  position: relative;
  height: 52rem; }
  .card__side {
    height: 52rem;
    font-size: 2rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: 3px;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
    overflow: hidden; }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #55c57a, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0deg); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: screen;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: 3px;
    border-top-right-radius: 3px; }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url("img/nat-5.jpg"); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #55c57a, #28b485), url("img/nat-6.jpg"); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url("img/nat-7.jpg"); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%;
    z-index: 1; }
  .card__heading-span {
    padding: 1rem 1.5rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone; }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: 0 auto; }
    .card__details li {
      text-align: center;
      font-size: 1.5rem;
      padding: 1rem;
      /*
 To apply the heading style we need to add the text-decoration break to do that we need to nest another elemtn which is the heading span
*/ }
      .card__details li:not(:last-child) {
        border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: #fff; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 400; }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg); }
  .story__shape {
    width: 15rem;
    height: 15rem;
    background-color: #FF7043;
    float: left;
    border-radius: 50%;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    transform: translateX(-3rem) skewX(12deg);
    position: relative;
    overflow: hidden; }
  .story__img {
    height: 100%;
    transform: translateX(-4rem) scale(1.3);
    transition: all .3s;
    backface-visibility: hidden; }
  .story__text {
    transform: skewX(12deg); }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s; }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(4px) brightness(70%); }

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .55;
  overflow: hidden; }
  .bg-video__content {
    height: 100%;
    width: 100%;
    object-fit: cover; }

.form__group:not(:last-child) {
  margin-bottom: 2rem; }

.form__input {
  font-size: 1.5rem;
  font-family: inherit;
  padding: 1.5rem 2rem;
  color: inherit;
  border-radius: 3px;
  background-color: rgba(255, 255, 255, 0.5);
  border: none;
  border-bottom: 3px solid transparent;
  width: 90%;
  display: block;
  transition: all .3s;
  /* These are two classes that are part of google chrome, they allow us to set the styles of the input when we have a required type on the html this. These states are valid and invalid.
        :valid pseudo class
       :invalid pseudo class
 */ }
  .form__input:focus {
    outline: none;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);
    border-bottom: 3px solid #FF7043; }
    .form__input:focus:valid {
      border-bottom: 3px solid #28b485; }
    .form__input:focus:invalid {
      border-bottom: 3px solid #ff7730; }
  .form__input::-webkit-input-placeholder {
    color: #999; }

.form__label {
  font-size: 1.2rem;
  font-weight: 700;
  margin-left: 2rem;
  margin-top: 1rem;
  display: block;
  transition: all .3s; }

.form__input:placeholder-shown + .form__label {
  opacity: 0;
  visibility: hidden;
  transform: translateY(-4rem); }

.form__radio-group {
  width: 50%;
  display: inline-block; }

.form__radio-input {
  display: none; }

.form__radio-label {
  font-size: 1.6rem;
  cursor: pointer;
  position: relative;
  padding-left: 4.5rem; }

.form__radio-button {
  height: 3rem;
  width: 3rem;
  border: 5px solid #55c57a;
  border-radius: 50%;
  display: inline-block;
  position: absolute;
  left: 0;
  top: -.4rem; }
  .form__radio-button::after {
    content: "";
    display: block;
    height: 1.5rem;
    width: 1.5rem;
    border-radius: 50%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #55c57a;
    opacity: 0;
    transition: all .2s; }

.form__radio-input:checked ~ .form__radio-label .form__radio-button::after {
  opacity: 1; }

/*
We need to define a width for a row, using an 1140px width  we need to set this rems.

max-width: If there's available space to supply the correct width specified by Rem it will do it, otherwise if the viewport does not have the available width it will instead fill 100% of the viewport width

To center an element inside a block element we use the margin: 0 auto trick

Our rows should have space for our layout Naturally we need some space
because this value like max width and margin bottom are candidates to be variables.

As the project progresses we will be using these variables over and over again

The last child we cannot have a margin at the bottom for layout specificiations

.not() we need to use this to specify a pseudo class such as last child or the last row element we select everything except the last child. Therefore styles such as margin-bottom will work on everything EXCEPT the last child.

----------Columns---------
Because our columns are inside our rows we can nest the columns inside our row selector

We have to make an equation for the columns
for example our first row we have two columns with a gutter in the middle.

We take the entire width of the row then we subtract the gutter, then that value gets divided by 2

max-width - gutter / 2 for the width of one column

------- calc() --------

This function allows us to make calculations where we can mix units. Css and Sass all have the ability to make calculations but they are specific to the units we cannot mix them.

The importance of using calc() in the layout is the ability of doing these calculations before the page is rendered it is only then when css and the browser knows what the correct measurements are.

We must use order of operations for our calculations

special note:

To use a variable with the calc() function we must interpolate it by using variable

In order to not have gutters with addtional widths we must reset the margin of the last child

When an item is floated it loses it's height this is where we implement ClearFix

Because our columns will be different yet similar whatever pieces of code that we can reuse and not retype is ideal.

We will use our attributes property to apply the
&:not(:last-child){
 margin-right: $gutter-horizontal
}
to all columns

To use attributes we apply the [] inside the brackets we can alter the attributes that we want such as src for images href for anchors or like we are using it now it's for classes. Inside the brackets we can use other symbos such as ^ which means it will match the beginning that we specify.

What this will do is select all of the elements that start with the col- class name, this is how we select all of the items at the same time.

* means to select all of the classes that match col-

When we set up our attributes inside our brackets we use clojures to then speicify the styles that should match the attribute we have selected.

*/
.row {
  max-width: 114rem;
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }
  .row .col-1-of-3 {
    width: calc((100% - 2/* 100% is the width of the row, 2 is the number of gutters, gutter horizontal is the size of the gutter and the 3 is the number of columns we have on that row*/ * 6rem) / 3); }
  .row .col-2-of-3 {
    width: calc( 2 * ((100% - 2 * 6rem) / 3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem) / 4); }
  .row .col-2-of-4 {
    width: calc( 2 * (( 100% - 3 * 6rem) / 4 ) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * (( 100% - 3 * 6rem) / 4) + (2 * 6rem)); }

/* To use BEM to it's full advantage with Sass and nesting we can use the & operator to copy the part of the overarching parent class. for example header is our class for the top page, therefore to nest we would do the following
 .header{
  &__logo-box{
    position: absolute;
    top:4rem;
    left:4rem;
   }
 }
 the & copies only the header portion before the clojure and adds it to the the nesting lines

*/
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(./img/dog_hero.jpeg);
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 15rem;
    filter: invert(95%); }
  .header__logo:hover {
    animation: moveInLeft .5s ease-out; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.footer {
  background-color: #333;
  padding: 10rem 0;
  font-size: 1.4rem;
  color: #f7f7f7; }
  .footer__logo-box {
    text-align: center;
    margin-bottom: 8rem;
    filter: invert(70%) sepia(83%) hue-rotate(80deg); }
  .footer__logo {
    width: 15rem;
    height: auto; }
  .footer__navigation {
    border-top: 1px solid #777;
    padding-top: 2rem;
    display: inline-block; }
  .footer__list {
    list-style: none; }
  .footer__item {
    display: inline-block; }
    .footer__item:not(:last-child) {
      margin-right: 1.5rem; }
  .footer__link:link, .footer__link:visited {
    color: #f7f7f7;
    background-color: #333;
    text-decoration: none;
    text-transform: uppercase;
    display: inline-block;
    transition: all .2s; }
  .footer__link:hover, .footer__link:active {
    color: #55c57a;
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
    transform: rotate(5deg) scale(1.3); }
  .footer__copyright {
    border-top: 1px solid #777;
    display: inline-block;
    width: 80%;
    float: right; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0rem;
  margin-top: -20vh; }

.section-features {
  padding: 20rem 0;
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(img/nat-4.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  transform: skewY(-7deg);
  margin-top: -10rem; }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  margin-top: -10rem;
  padding: 25rem 0 15rem 0; }

.section-stories {
  padding: 15rem 0;
  position: relative; }

.section-booking {
  padding: 15rem 0;
  background-image: linear-gradient(to right bottom, #55c57a, #28b485); }

.book {
  background-image: linear-gradient(105deg, rgba(255, 255, 255, 0.9) 0%, rgba(255, 255, 255, 0.9) 50%, transparent 50%), url(img/nat-10.jpg);
  /*
          ------ linear-gradient ----------
      We can specify a gradient with a direction and a color at it's most useful, but we can also make the gradient cut into an angle, and it rotates the gradent, we can add an angle the x direction. If we put the values where we apply the full depth of the color we don't get the computed value for the transition of one color to the other. We might but it's a small calc.

     For this example we will be using transparent for the absense of color gradient

*/
  background-size: 100%;
  border-radius: 3px;
  box-shadow: 0 3rem 4rem rgba(0, 0, 0, 0.2);
  height: 50rem; }
  .book__form {
    width: 50%;
    padding: 6rem; }
